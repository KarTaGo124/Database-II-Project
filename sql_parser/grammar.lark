start: stmt (";" stmt)* ";"?

?stmt: create_table
     | load_data
     | create_index
     | drop_table
     | drop_index
     | select_stmt
     | insert_stmt
     | delete_stmt

# ===== CREATE TABLE =====
KEY: "KEY"
create_table: "CREATE" "TABLE" IDENT "(" coldef ("," coldef)* ")"
coldef: IDENT type_spec [KEY] ["INDEX" index_kind]

type_spec: "INT"                               -> t_int
         | "FLOAT"                             -> t_float
         | "DATE"                              -> t_date
         | "VARCHAR" "[" SIGNED_INT "]"        -> t_varchar
         | "ARRAY" "[" "FLOAT" "]"             -> t_array_2d
         | "ARRAY" "[" "FLOAT" "," SIGNED_INT "]" -> t_array_nd

INDEX_KIND: "SEQUENTIAL" | "ISAM" | "BTREE" | "RTREE" | "HASH"
index_kind: INDEX_KIND
ident_or_string: IDENT | STRING

# ===== LOAD DATA FROM FILE =====
load_data: "LOAD" "DATA" "FROM" "FILE" STRING "INTO" IDENT ["WITH" "MAPPING" "(" column_mapping ("," column_mapping)* ")"]

column_mapping: IDENT "=" "ARRAY" "(" IDENT ("," IDENT)* ")"

# ===== CREATE INDEX =====
create_index: "CREATE" "INDEX" "ON" IDENT "(" IDENT ")" "USING" index_kind

# ===== DROP TABLE =====
drop_table: "DROP" "TABLE" IDENT

# ===== DROP INDEX =====
drop_index: "DROP" "INDEX" IDENT

# ===== SELECT =====
select_all: "*"
select_cols: col_list
select_stmt: "SELECT" (select_all | select_cols) "FROM" IDENT ["WHERE" predicate]

?predicate: IDENT "=" literal                                    -> pred_eq
          | IDENT "BETWEEN" literal "AND" literal            -> pred_between
          | IDENT "IN" "(" spatial_point "," number ")"      -> pred_in
          | IDENT "NEAREST" "(" spatial_point "," SIGNED_INT ")" -> pred_nearest

# ===== INSERT =====
insert_stmt: "INSERT" "INTO" IDENT ["(" col_list ")"] "VALUES" "(" literal ("," literal)* ")"
col_list: IDENT ("," IDENT)*

# ===== DELETE =====
delete_stmt: "DELETE" "FROM" IDENT "WHERE" predicate

# ===== BÃ¡sicos =====
spatial_point: "(" number ("," number)* ")"
number: SIGNED_INT   -> int_lit
      | SIGNED_FLOAT -> float_lit

literal: number
       | STRING         -> string
       | "NULL"         -> null
       | spatial_point  -> array_lit

%import common.SIGNED_INT
%import common.SIGNED_FLOAT
%import common.CNAME         -> IDENT
%import common.ESCAPED_STRING-> STRING
%import common.WS
%ignore WS
